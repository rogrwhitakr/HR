Endlich !

1. Variables

	$_ – Contains the current pipeline object, used in script blocks, filters, and the where statement.
	$Args – Contains an array of the parameters passed to a function.
	$Error – Contains objects for which an error occurred while being processed in a cmdlet.
	$Home – Specifies the user’s home directory.
	$PsHome – The directory where the Windows PowerShell is installed.
	
Set-Variable --> write-Output

	--> geht natürlich auch:
		$xy = "asder" --> $xy <enter> --> PowerShell gibt Variable aus
		
	--> replace "asder", "ninja" <-- komma !
	
write-host	

	--> $strA = "wills" 
		write-host "ninja $strA wissen..."
		
assign data types

	--> [int]$intA = 15
		[double],
		etc.
	--> hier nochmal die liste zum tausendsten mal

		Type		Description
		[int]		32-bit signed integer
		[long]		64-bit signed integer
		[string]	Fixed-length string of Unicode characters
		[char]		A Unicode 16-bit character
		[byte]		An 8-bit unsigned character
		[bool]		Boolean True/False value
		[decimal]	An 128-bit decimal value
		[single]	Single-precision 32-bit floating point number
		[double]	Double-precision 64-bit floating point number
		[xml]		Xml object
		[array]		An array of values
		[hashtable]	Hashtable object
		
		
PowerShell Operators

	= 		Assigns a value to a variable.
	+ or += Addition.
	- or -= Subtraction.
	* or *= Multiplication.
	/ or /= Division.
	% or %= Modulus (retrieves the remainder of a division operation).
	“++”	Increments a value by 1.
	“–” 	Decrements a value by 1. -Hard to see, it is minus minus or (- -) without the space.
	
Powershell Zeug / weiß noch nicht 

	--> $a = $env:path; $a.Split(";")
	-->	PowerShellEnvironment-Pfad --> Ausgabe mehrerer Pfade--> Trennung am ; --> gibt eine saubere Liste


	